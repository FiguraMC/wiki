"use strict";(self.webpackChunkfigurawiki=self.webpackChunkfigurawiki||[]).push([[3833],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,u=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=c(r),d=o,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||u;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var u=r.length,l=new Array(u);l[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[p]="string"==typeof e?e:o,l[1]=a;for(var c=2;c<u;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9034:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>u,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const u={},l=void 0,a={unversionedId:"enums/TextureTypes",id:"enums/TextureTypes",title:"TextureTypes",description:"Texture Types you can set using setPrimaryTexture and setSecondaryTexture",source:"@site/docs/enums/TextureTypes.md",sourceDirName:"enums",slug:"/enums/TextureTypes",permalink:"/enums/TextureTypes",draft:!1,editUrl:"https://github.com/figuramc/wiki/tree/main/docs/enums/TextureTypes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RenderTypes",permalink:"/enums/RenderTypes"},next:{title:"UseActions",permalink:"/enums/UseActions"}},i={},c=[],s={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Texture Types you can set using ",(0,o.kt)("code",null,"setPrimaryTexture")," and ",(0,o.kt)("code",null,"setSecondaryTexture"),(0,o.kt)("br",null)),(0,o.kt)("code",null,"SKIN"),": Your 64x64 Minecraft skin",(0,o.kt)("br",null),(0,o.kt)("code",null,"CAPE"),": Your cape",(0,o.kt)("br",null),(0,o.kt)("code",null,"ELYTRA"),": Your elytra",(0,o.kt)("br",null),(0,o.kt)("code",null,"RESOURCE"),": A texture from Minecraft itself, compatible with resource packs",(0,o.kt)("br",null),(0,o.kt)("code",null,"PRIMARY"),": The modelPart's original texture in Blockbench",(0,o.kt)("br",null),(0,o.kt)("code",null,"SECONDARY"),": The modelPart's original secondary texture in Blockbench (if one exists)",(0,o.kt)("br",null),(0,o.kt)("code",null,"SPECULAR"),": Setting a specular map for rendering mods that use it",(0,o.kt)("br",null),(0,o.kt)("code",null,"NORMAL"),": Setting a normal map for rendering mods that use it",(0,o.kt)("br",null),(0,o.kt)("code",null,"CUSTOM"),": A texture object from Blockbench or one created via the Texture API",(0,o.kt)("br",null))}m.isMDXComponent=!0}}]);